/* Copyright (c) 2014, 2023, Oracle and/or its affiliates. */
/* All rights reserved.*/

package oracle.soda;

/**
 * Represents a document with (typically) JSON content.
 * <p>
 * The content can also be another MIME type: image, audio, video, etc.
 * <p>
 * The document has the following components:
 * <ul>
 *   <li>key
 *   <li>content
 *   <li>created-on timestamp
 *   <li>last-modified timestamp
 *   <li>version or checksum (suitable for ETag)
 *   <li>media type ("application/json" for JSON documents)
 * </ul>
 * <P>
 * It is valid for any of the above components to be missing in
 * a given <code>OracleDocument</code>. 
 * <p>
 * Some examples:
 * <ul>
 *   <li>{@link OracleCollection#insert(OracleDocument)} and
 *       {@link OracleCollection#insertAndGet(OracleDocument)}
 *       input documents may contain content only.
 *       Key is automatically generated by the insert operation.
 *       If the collection is configured with client-assigned keys,
 *       the input document needs to contain the key as well.
 *   <li>Documents returned by {@link OracleCursor} obtained by calling
 *       <code>col.find().getCursor()</code>
 *       may contain key, content, created-on
 *       timestamp, last-modified timestamp, and version.
 *   <li>Result documents returned by {@link OracleCollection#insertAndGet(OracleDocument)}
 *       or {@link OracleOperationBuilder#replaceOneAndGet(OracleDocument)}
 *       may contain key, created-on timestamp, last-modified timestamp,
 *       and version. These documents will not have any content.
 * </ul>
 */
public interface OracleDocument
{
  /**
   * Returns the key.
   *
   * @return                 the key as a <code>String</code>.
   *                         <code>null</code> if the key is not
   *                         available
   */
  String getKey();

  /**
   * Returns the content as a byte array.
   *
   * @return                 content as a <code>byte[]</code>,
   *                         or <code>null</code> if the content is
   *                         not available.
   * @throws OracleException if there's an error returning content
   *                         as <code>byte[]</code>
   */
  byte[] getContentAsByteArray()
    throws OracleException;

  /**
   * Returns the content as a <code>String</code>.
   *
   * @return                 content as a <code>String</code>,
   *                         or <code>null</code> if the content is not
   *                         available
   * @throws OracleException if there's an error returning content
   *                         as <code>String</code>
   */
  String getContentAsString()
    throws OracleException;

  /**
   * Returns the content as the specified type. The following types are
   * supported:
   * <br><br>
   * <table border="1">
   * <caption>&nbsp;</caption>
   * <tr>
   * <th style="border: 1px solid black; padding: 5px;">Class</th>
   * <th style="border: 1px solid black; padding: 5px;">Description</th>
   * </tr>
   * <tr>
   * <td style="border: 1px solid black; padding: 5px;">{@code javax.json.JsonValue}<br>
   *     {@code oracle.sql.json.OracleJsonValue}
   * </td>
   * <td style="border: 1px solid black; padding: 5px;">The JSON type value is returned as {@code JsonValue} or {@code OracleJsonValue}.
   * Any derived interface, such as {@code JsonObject} may also be used.
   * <pre><code>  JsonObject obj = doc.getContentAs(JsonObject.class);</code></pre>
   * </tr>
   * <tr>
   * <td style="border: 1px solid black; padding: 5px;">
   * {@code javax.json.stream.JsonParser}<br>
   * {@code oracle.sql.json.OracleJsonParser}
   * </td>
   * <td style="border: 1px solid black; padding: 5px;">
   * The JSON type value is returned as an event stream.
   * </td>
   * </tr>
   * <tr>
   * <td style="border: 1px solid black; padding: 5px;">{@code java.lang.String}<br>
   *     {@code java.io.Reader}
   * </td>
   * <td style="border: 1px solid black; padding: 5px;">The JSON type value is returned as JSON text. </td>
   * </tr>
   * <tr>
   * <td style="border: 1px solid black; padding: 5px;">{@code java.io.InputStream}</td>
   * <td style="border: 1px solid black; padding: 5px;">The JSON type value is returned as UTF8 JSON text. </td>
   * </tr>
   * </table>
   *
   *
   * @param <T> the type of the returned content
   * @param type the type of the returned content
   *
   * @return                 content as an instance of the specified type
   *                         or <code>null</code> if the content is not
   *                         available
   * @throws OracleException if there's an error returning content
   *                         as the specified type or if a mapping to the
   *                         specified type is not supported
   */
  <T> T getContentAs(Class<T> type)
    throws OracleException;
  
  /**
   * Returns the media type. JSON objects have media type
   * <code>"application/json"</code>.
   *
   * @return                 media type as a <code>String</code>,
   *                         or <code>null</code> if the media type is
   *                         not available
   */
  String getMediaType();

  /**
   * Returns the timestamp of the last modification to this document in
   * ISO format.
   *
   * @return                 a <code>String</code> representation of the
   *                         timestamp, or <code>null</code> if the timestamp
   *                         is not available
   */
  String getLastModified();

  /**
   * Returns the timestamp of creation of this document in ISO format.
   *
   * @return                 a <code>String</code> representation of the
   *                         timestamp, or <code>null</code> if the timestamp
   *                         is not available
   */
  String getCreatedOn();

  /**
   * Returns a string suitable for use as a version of the
   * document. This is typically a version number, precise
   * timestamp, or checksum of the actual content.
   *
   * @return                 a <code>String</code> representation of the
   *                         version, or <code>null</code> if the version
   *                         is not available
   */
  String getVersion();

   /**
    * Returns the length of content if know. <code>-1</code>
    * is not known.
    *
    * @return                 length of content, in bytes. <code>-1</code>
    *                         if not known.
    */
  int getContentLength();

  /**
   * Returns <code>true</code> is this document has media type
   * <code>"application/json"</code>.
   *
   * @return                  <code>true</code> if this document has
   *                          media type "application/json", <code>false</code>
   *                          otherwise
   */
  boolean isJSON();

}
